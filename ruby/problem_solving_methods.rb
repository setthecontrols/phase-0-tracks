# Release 0 - this returns nil in repl, but not the command line.  Which one should I trust?
# def search_array(arr, num)
# i =0 
# while i < arr.length
#   if num == arr[i]
#     p i
#   else
#     break
#   end
#   i += 1
# end

# end
# arr = [42, 89, 23, 1]
# search_array(arr,4)

# Add a method to your file that takes a number of Fibonacci terms to generate and returns an array of the terms. 
# For example, fib(6) would return [0,1,1,2,3,5]. Your method should work for a large number of terms. To verify your work: 
# the last number in the array generated by fib(100) will be 218922995834555169026. (How can you verify this 
#   without having to compare this huge number manually? Be smart with your driver code!)

 # input = num.  create  array with first two fib number 0,1.  write code that iterates num times - 2 that adds first two numbers and places 
 # sum in 3rd array position, and continues to do this until iteration is over.

FIB_ARR = [0,1]
def fib(num)
i = 0 
while i < num-2
FIB_ARR <<  FIB_ARR[i] + FIB_ARR[i+1]
i += 1
# p "working"
end
p FIB_ARR
end 
fib(100)